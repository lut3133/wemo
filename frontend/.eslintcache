[{"C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\index.js":"1","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\App.js":"2","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\reducers\\memo.js":"4","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\Home.js":"5","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\MemosPage.js":"6","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\FilesPage.js":"7","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\Header.js":"8","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\MemoList.js":"9","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\List.js":"10","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\Form.js":"11","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\actions\\memo.js":"12","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\LoginPage.js":"13","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\requests\\requests.js":"14","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\Routes.js":"15","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\RegisterPage.js":"16","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\MemoPage.js":"17","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\MemosNavBar.js":"18","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\NavBar.js":"19"},{"size":717,"mtime":1607318216153,"results":"20","hashOfConfig":"21"},{"size":286,"mtime":1607437341053,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1606493792542,"results":"23","hashOfConfig":"21"},{"size":565,"mtime":1607414483616,"results":"24","hashOfConfig":"21"},{"size":425,"mtime":1607502819277,"results":"25","hashOfConfig":"21"},{"size":1040,"mtime":1607509840198,"results":"26","hashOfConfig":"21"},{"size":8644,"mtime":1607758607637,"results":"27","hashOfConfig":"21"},{"size":220,"mtime":1607446587339,"results":"28","hashOfConfig":"21"},{"size":1900,"mtime":1607503086355,"results":"29","hashOfConfig":"21"},{"size":1750,"mtime":1607517350505,"results":"30","hashOfConfig":"21"},{"size":9158,"mtime":1607742318604,"results":"31","hashOfConfig":"21"},{"size":244,"mtime":1607303149361,"results":"32","hashOfConfig":"21"},{"size":1078,"mtime":1607437354847,"results":"33","hashOfConfig":"21"},{"size":2173,"mtime":1607759077224,"results":"34","hashOfConfig":"21"},{"size":1157,"mtime":1607744381678,"results":"35","hashOfConfig":"21"},{"size":1440,"mtime":1607414483620,"results":"36","hashOfConfig":"21"},{"size":796,"mtime":1607521347007,"results":"37","hashOfConfig":"21"},{"size":394,"mtime":1607446919547,"results":"38","hashOfConfig":"21"},{"size":347,"mtime":1607446764515,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"10l7pdc",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\index.js",[],["91","92"],"C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\App.js",["93","94"],"import './App.css'\r\nimport React from \"react\"\r\nimport Routes from \"./routes/Routes\"\r\nimport {Header} from \"./components/Header\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n\r\n\r\n          <Routes/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\reducers\\memo.js",["95","96"],"import {postLogin, postMakeFile} from \"../requests/requests\";\r\n\r\nexport default function reducers(state = [], action) {\r\n    if (action.type === 'CREATE_MEMO') {\r\n        console.log(\"CREATE_MEMO\")\r\n        return [\r\n            ...state,\r\n            {\r\n                id: action.id,\r\n                title: action.title,\r\n                text: action.text\r\n            }\r\n        ]\r\n    } else if (action.type === 'DELETE_MEMO') {\r\n        console.log(\"DELETE_MEMO\")\r\n        return state.filter((item) => item.text !== action.text)\r\n\r\n    }\r\n    return state\r\n}","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\Home.js",["97","98"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Header} from \"./Header\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/register\">register-page</Link>\r\n                <br/>\r\n                <Link to=\"/login\">login-page</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\MemosPage.js",["99","100","101","102","103","104","105"],"import '../App.css';\r\nimport React from \"react\";\r\nimport {Header} from \"../components/Header\";\r\nimport MemoList from \"../components/MemoList\";\r\nimport {Route,Link, Switch} from 'react-router-dom';\r\nimport Home from \"../components/Home\";\r\nimport MemosNavBar from \"../components/MemosNavBar\";\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nexport default class MemosPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    createMemo(){\r\n        window.location.replace(\"/memo\");\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <MemoList/>\r\n                <Link to={{\r\n                    pathname : \"/memo\",\r\n                    state : {\r\n                        name : \"\",\r\n                        content : \"\"\r\n                    }\r\n                }}>\r\n                    <div class = \"createMemo\">\r\n                        <button class=\"createMemo\">+</button>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\FilesPage.js",["106","107","108","109"],"import '../App.css';\r\nimport React from \"react\";\r\nimport {getLs, getPwd, postCd, postDeleteFile, postMkDir, postRmDir} from \"../requests/requests\";\r\nimport {deleteMemo} from \"../actions/memo\";\r\nimport {connect} from \"react-redux\";\r\nimport {Header} from \"../components/Header\";\r\nimport {Link} from \"react-router-dom\";\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nclass FilesPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            file_info_list : [],\r\n            cur_path : \".\",\r\n            new_dir_name : \"\"\r\n        }\r\n        this.open = this.open.bind(this);\r\n        this.clickDirName = this.clickDirName.bind(this);\r\n        this.clickOpen = this.clickOpen.bind(this);\r\n        this.clickDeleteDir = this.clickDeleteDir.bind(this);\r\n        this.clickNewFolderButtion = this.clickNewFolderButtion.bind(this);\r\n        this.clickRequestNeFolder = this.clickRequestNeFolder.bind(this);\r\n    }\r\n\r\n    deleteMemo(fileName){\r\n\r\n        this.props.dispatchDeleteMemo();\r\n        const data = {\r\n            file_name : fileName\r\n        }\r\n        postDeleteFile(data);\r\n        window.location.replace(\"/memo\");\r\n    }\r\n\r\n    open(type){\r\n        if(type === \"file\"){\r\n\r\n        }\r\n        else if(type === \"dir\"){\r\n\r\n        }\r\n        window.location.replace(\"/home\");\r\n    }\r\n    clickDirName(dir_name){\r\n        let data = {\r\n            dir_name : dir_name\r\n        }\r\n        postCd(data);\r\n        window.location.replace(\"/file\");\r\n    }\r\n    clickOpen(dir_name){\r\n        let data = {\r\n            dir_name : dir_name\r\n        }\r\n        postCd(data);\r\n        window.location.replace(\"/memos\");\r\n    }\r\n    clickDeleteDir(dir_name){\r\n        let data = {\r\n            dir_name : dir_name\r\n        }\r\n        postRmDir(data);\r\n        window.location.replace(\"/file\");\r\n    }\r\n    clickNewFolderButtion(){\r\n        var mkdirModal = document.getElementById(\"mkdirModal\");\r\n        var mkdirBtn = document.getElementById(\"newFolderButton\");\r\n        var span1 = document.getElementById(\"mkdirModalClose\");\r\n\r\n        mkdirBtn.onclick = function() {\r\n            mkdirModal.style.display = \"block\";\r\n        }\r\n        span1.onclick = function() {\r\n            mkdirModal.style.display = \"none\";\r\n        }\r\n\r\n        window.onclick = function(event) {\r\n            if (event.target == mkdirModal) {\r\n                mkdirModal.style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n    clickRequestNeFolder(){\r\n        var span1 = document.getElementById(\"mkdirModalClose\");\r\n        span1.click();\r\n        let data = {\r\n            new_dir_name : this.state.new_dir_name\r\n        }\r\n        postMkDir(data);\r\n        window.location.replace(\"/file\");\r\n    }\r\n\r\n    updateNewDirName = (event) => {this.setState({new_dir_name: event.target.value})}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"wrapper\">\r\n                    <div class=\"currentPath\">\r\n                        현재 위치: /{this.state.cur_path === \".\" ? \"\" : this.state.cur_path}\r\n                    </div>\r\n                    <div class=\"newFolder\">\r\n                        <button id=\"newFolderButton\" onClick={this.clickNewFolderButtion}>새 폴더</button>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"filesInfo\">\r\n                    <table class=\"fileTable\">\r\n                        <th>이름</th>\r\n                        <th>수정 날짜</th>\r\n                        <th>파일 크기</th>\r\n                        <th> </th>\r\n                        <th> </th>\r\n                        {this.state.cur_path === \".\" || this.state.cur_path === \"\" ? null : <tr>\r\n                            <td className=\"fileNametd\" onClick={()=>{\r\n                                this.clickDirName(\"..\");\r\n                            }} > .. </td>\r\n                            <td className=\"fileModificationDate\"> </td>\r\n                            <td className=\"fileSize\"> </td>\r\n                            <td className=\"fileDelete\"></td>\r\n                            <td className=\"fileOpen\"></td>\r\n                        </tr>}\r\n\r\n                        {this.state.file_info_list.map(file => {\r\n\r\n                            if(file.type ===\"dir\"){\r\n                                // request post cd\r\n                                return (<tr>\r\n                                    <td class=\"fileNametd\" onClick={()=>{\r\n                                        this.clickDirName(file.name);\r\n                                    }} > {file.name} </td>\r\n                                    <td class=\"fileModificationDate\"> {file.modificationDate}</td>\r\n                                    <td class=\"fileSize\"> {file.size}</td>\r\n                                    <td className=\"fileDelete\" onClick={() => {\r\n                                        this.clickDeleteDir(file.name);\r\n                                    }}>삭제\r\n                                    </td>\r\n\r\n                                    <td className=\"fileOpen\"onClick={()=>{\r\n                                        this.clickOpen(file.name);\r\n                                    }}>\r\n                                        <Link to=\"/memos\">\r\n                                            열기\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            }\r\n                            else if(file.type === \"file\"){\r\n                                return (<tr>\r\n                                    <td class=\"fileNametd\" >\r\n                                        <Link to={{\r\n                                            pathname : \"/memo\",\r\n                                            state : {\r\n                                                name : file.name,\r\n                                                content : null\r\n                                            }\r\n                                        }}>\r\n                                            {file.name}\r\n                                        </Link>\r\n                                    </td>\r\n                                    <td class=\"fileModificationDate\"> {file.modificationDate}</td>\r\n                                    <td class=\"fileSize\"> {file.size}</td>\r\n                                    <td className=\"fileDelete\" onClick={() => {\r\n                                        deleteMemo(file.name, file.content);\r\n                                        postDeleteFile({file_name: file.name});\r\n                                        window.location.replace(\"/file\");\r\n                                    }}>삭제\r\n                                    </td>\r\n\r\n                                    <td className=\"fileOpen\" >\r\n                                        <Link to={{\r\n                                            pathname : \"/memo\",\r\n                                            state : {\r\n                                                name : file.name,\r\n                                                content : null\r\n                                            }\r\n                                        }}>\r\n                                            열기\r\n                                        </Link>\r\n                                    </td>\r\n\r\n                                </tr>)\r\n                            }\r\n\r\n                            }\r\n                        )}\r\n                    </table>\r\n                </div>\r\n                <div id=\"mkdirModal\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span id=\"mkdirModalClose\" className=\"close\">&times;</span>\r\n                        <h2>폴더생성</h2>\r\n                        <span>폴더 이름:</span>\r\n                        <input id=\"newDirName\" value={this.state.new_dir_name} onChange={this.updateNewDirName} type=\"text\"/>\r\n                        <button onClick={this.clickRequestNeFolder}>폴더 생성</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        getLs().then(res =>{\r\n            this.setState({file_info_list : res});\r\n        });\r\n        getPwd().then(res =>{\r\n            console.log(res.cur_path);\r\n            this.setState({cur_path : res.cur_path});\r\n        })\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteMemo: (title,text) => dispatch(deleteMemo(title,text))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(FilesPage)","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\Header.js",[],"C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\MemoList.js",["110","111","112"],"import React from \"react\"\r\nimport List from \"./List\"\r\nimport {connect} from 'react-redux'\r\nimport {deleteMemo} from \"../actions/memo\";\r\nimport {getLsAndContent} from \"../requests/requests\";\r\n\r\nclass MemoList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            existMemos : []\r\n        };\r\n    }\r\n\r\n    callAPI(){\r\n        getLsAndContent().then(res => {\r\n            console.log(res);\r\n            this.setState({existMemos : res});\r\n            console.log(this.state.existMemos[0]);\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callAPI();\r\n    }\r\n\r\n    render() {\r\n        const {state, totalValue, deleteMemo, history} = this.props;\r\n        return(\r\n            <div>\r\n                {state.map(memo =>\r\n                    <List title = {memo.title}\r\n                          text = {memo.text}\r\n                          textLength = {memo.text.length}\r\n                          dispatchDeleteMemo = {()=> deleteMemo(memo.title,memo.text)}/>\r\n                          )}\r\n                {this.state.existMemos.map(memo =>{\r\n                    if(memo.type === \"file\"){\r\n                        return <List title = {memo.name}\r\n                                     text = {memo.content}\r\n                                     textLength = {memo.content.length}\r\n                                     dispatchDeleteMemo = {()=> deleteMemo(memo.name,memo.content)}/>\r\n                    }\r\n                }\r\n                )}\r\n            </div>)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state : state,\r\n        totalValue: state.length,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteMemo: (title,text) => dispatch(deleteMemo(title,text))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MemoList)","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\List.js",["113"],"import React from \"react\"\r\nimport {postDeleteFile} from \"../requests/requests\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class List extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isClicked: false,\r\n                        title: props.title,\r\n                        content: props.text};\r\n        this.deleteMemo = this.deleteMemo.bind(this);\r\n    }\r\n\r\n    updateTitle = (event) => {this.setState({title:event.target.value})}\r\n    updateContent = (event) => {this.setState({content:event.target.value})}\r\n\r\n    deleteMemo(){\r\n\r\n        this.props.dispatchDeleteMemo();\r\n        const data = {\r\n            file_name : this.state.title\r\n        }\r\n        postDeleteFile(data);\r\n        window.location.replace(\"/memo\");\r\n    }\r\n/*\r\n    <button onClick={this.createMemo}>수정</button>\r\n    <button onClick={this.deleteMemo}>삭제</button>\r\n */\r\n    gotoMemoEditPage(){\r\n    }\r\n\r\n\r\n    render(){\r\n        const {dispatchDeleteMemo} = this.props\r\n\r\n        return (\r\n                <Link to={{\r\n                    pathname : \"/memo\",\r\n                    state : {\r\n                        name : this.state.title,\r\n                        content : this.state.content\r\n                    }\r\n                }}>\r\n                    <div class=\"briefMemo\">\r\n                        <input type=\"text\" class=\"manyMemoTitle\" value={this.state.title.split(\".\")[0]} onChange={this.updateTitle}/>\r\n                        <br/>\r\n                        <hr/>\r\n                        <input type=\"text\" class=\"manyMemoContent\" value={this.state.content} onChange={this.updateContent}/>\r\n                        <br/>\r\n                    </div>\r\n                </Link>)\r\n    }\r\n}\r\n\r\n",["114","115"],"C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\Form.js",["116","117","118","119","120","121","122"],"import React from \"react\"\r\nimport {createMemo} from \"../actions/memo\";\r\nimport { connect } from 'react-redux'\r\nimport {postAudioFile, postEditFile, postFileContent, postMakeFile, postSttTest} from \"../requests/requests\";\r\nimport NavBar from \"./NavBar\";\r\n\r\n\r\n\r\nclass Form extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.fileName,\r\n            content: this.props.fileContent,\r\n        };\r\n        this.editMemo = this.editMemo.bind(this);\r\n        //this.createMemo = this.createMemo.bind(this);\r\n\r\n        this.startRecordAudio = this.startRecordAudio.bind(this);\r\n        this.stopRecordAudio = this.stopRecordAudio.bind(this);\r\n    }\r\n\r\n    updateTitle = (event) => {this.setState({title: event.target.value})}\r\n    updateContent = (event) => {this.setState({content:event.target.value})}\r\n/*\r\n    createMemo(){\r\n        this.props.dispatch(this.state.title,this.state.content);\r\n        const data = {\r\n            file_name : this.state.title + \".txt\",\r\n            file_data : this.state.content\r\n        }\r\n        postMakeFile(data);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <span>Title: </span>\r\n                <input value={this.state.title} onChange={this.updateTitle}/>\r\n                <br/>\r\n                <span>Content: </span>\r\n                <input value={this.state.content} onChange={this.updateContent}/>\r\n                <button onClick={this.createMemo}>OK</button>\r\n            </React.Fragment>)\r\n    }\r\n\r\n */\r\n    editMemo(){\r\n        const data = {\r\n            file_name : this.state.title+\".txt\",\r\n            file_data : this.state.content\r\n        }\r\n        postEditFile(data);\r\n        window.location.replace(\"/memos\");\r\n    }\r\n\r\n    startRecordAudio(){\r\n        getStream('audio');\r\n        console.log(\"skjklsd\");\r\n    }\r\n    stopRecordAudio(){\r\n        stopStream('audio');\r\n        console.log(\"skjklsd\");\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <div class = \"oneMemo\">\r\n                    <input placeholder=\"제목을 입력해주세요.\" type= \"text\" class = \"oneMemoTitle\" value={this.state.title} onChange={this.updateTitle}/>\r\n                    <br/>\r\n                    <hr/>\r\n                    <textarea placeholder=\"내용을 입력해주세요.\" class = \"oneMemoContent\" value={this.state.content} onChange={this.updateContent}></textarea>\r\n                    <br/>\r\n                    <audio controls></audio>\r\n                    <button class =\"oneAudioSaveButton\" onClick={this.startRecordAudio}>음성녹음</button>\r\n                    <button className=\"oneAudioSaveDoneButton\" onClick={this.stopRecordAudio}>음성녹음종료</button>\r\n                    <button class = \"oneMemoSaveButton\" onClick={this.editMemo}>저장</button>\r\n                </div>\r\n            </React.Fragment>)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.content === null){\r\n            let data = {\r\n                file_name : this.state.title\r\n            }\r\n            postFileContent(data).then(res =>{\r\n                this.setState({ content : res.file_content});\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfunction getUserMedia(constraints) {\r\n    // if Promise-based API is available, use it\r\n    if (navigator.mediaDevices) {\r\n        return navigator.mediaDevices.getUserMedia(constraints);\r\n    }\r\n\r\n    // otherwise try falling back to old, possibly prefixed API...\r\n    var legacyApi = navigator.getUserMedia || navigator.webkitGetUserMedia ||\r\n        navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n\r\n    if (legacyApi) {\r\n        // ...and promisify it\r\n        return new Promise(function (resolve, reject) {\r\n            legacyApi.bind(navigator)(constraints, resolve, reject);\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction getStream (type) {\r\n    if (!navigator.mediaDevices && !navigator.getUserMedia && !navigator.webkitGetUserMedia &&\r\n        !navigator.mozGetUserMedia && !navigator.msGetUserMedia) {\r\n        alert('User Media API not supported.');\r\n        return;\r\n    }\r\n\r\n    var constraints = {};\r\n    constraints[type] = true;\r\n\r\n\r\n    getUserMedia(constraints)\r\n        .then(function (stream) {\r\n            console.log(stream);\r\n            var mediaControl = document.querySelector(type);\r\n\r\n            const mime = ['audio/wav', 'audio.mpeg','audio/webm','audio/ogg'].filter(MediaRecorder.isTypeSupported)[0];\r\n            const videoRecoder = new MediaRecorder(stream,{mimeType : mime, audioBitsPerSecond:16000});\r\n            console.log(videoRecoder);\r\n            videoRecoder.start();\r\n\r\n            setTimeout(() => videoRecoder.stop(), 2000);\r\n            videoRecoder.addEventListener(\"dataavailable\",handleVideoData);\r\n\r\n            if ('srcObject' in mediaControl) {\r\n                mediaControl.srcObject = stream;\r\n                console.log(stream.toString());\r\n            } else if (navigator.mozGetUserMedia) {\r\n                mediaControl.mozSrcObject = stream;\r\n            } else {\r\n                mediaControl.src = (window.URL || window.webkitURL).createObjectURL(stream);\r\n            }\r\n\r\n            mediaControl.play();\r\n        })\r\n        .catch(function (err) {\r\n            alert('Error: ' + err);\r\n        });\r\n}\r\n\r\nfunction stopStream (type) {\r\n    const media = document.querySelector(type);\r\n    const stream = media.srcObject;\r\n    const tracks = stream.getTracks();\r\n    tracks.forEach(track => track.stop());\r\n}\r\n\r\n\r\nconst handleVideoData = (event) =>{\r\n    // blob 이벤트에서 data 추출\r\n    console.log(\"dsdsd\"+event);\r\n    const { data } = event;\r\n\r\n    let blobData ={\r\n        blob : data\r\n    }\r\n    data.arrayBuffer().then(buffer =>{\r\n        //postSttTest(encode(buffer));\r\n        console.log(buffer);\r\n        buffer = new Int16Array(buffer);\r\n        console.log(buffer+\"ddddd\");\r\n        var downsampleBuffer = function (buffer, sampleRate, outSampleRate) {\r\n            if (outSampleRate == sampleRate) {\r\n                return buffer;\r\n            }\r\n            if (outSampleRate > sampleRate) {\r\n                throw \"downsampling rate show be smaller than original sample rate\";\r\n            }\r\n            var sampleRateRatio = sampleRate / outSampleRate;\r\n            var newLength = Math.round(buffer.length / sampleRateRatio);\r\n            var result = new Int16Array(newLength);\r\n            var offsetResult = 0;\r\n            var offsetBuffer = 0;\r\n            while (offsetResult < result.length) {\r\n                var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\r\n                var accum = 0, count = 0;\r\n                for (var i = offsetBuffer; i < nextOffsetBuffer && i < buffer.length; i++) {\r\n                    accum += buffer[i];\r\n                    count++;\r\n                }\r\n\r\n                result[offsetResult] = Math.min(1, accum / count)*0x7FFF;\r\n                offsetResult++;\r\n                offsetBuffer = nextOffsetBuffer;\r\n            }\r\n            return result.buffer;\r\n        }\r\n        console.log(\"downsampled\"+downsampleBuffer(buffer,48000,16000).byteLength)\r\n        let buffer1 = downsampleBuffer(buffer,48000,16000);\r\n        //console.log(buffer1.arrayBuffer().toString('base64')+\"dddsewssewewe\");\r\n        const mime = ['audio/wav', 'audio.mpeg','audio/webm','audio/ogg'].filter(MediaRecorder.isTypeSupported)[0];\r\n        let bblob = new Blob([buffer1]);\r\n        bblob.arrayBuffer().then(data=>{\r\n            //postSttTest(encode(data));\r\n        })\r\n        const audioDownloadLink = document.createElement(\"a\");\r\n        audioDownloadLink.href = URL.createObjectURL(bblob);\r\n        audioDownloadLink.download = \"recorded1.wav\";\r\n\r\n\r\n        // body에 append 해줘야겠죠\r\n        document.body.appendChild(audioDownloadLink);\r\n\r\n        // faking click. body에 append 했으니 클릭해서 다운로드를 해줘야 합니다.\r\n        audioDownloadLink.click();\r\n    })\r\n    postAudioFile(blobData);\r\n\r\n    // 다운로드를 위해 a 태그를 만들어주고 href로 해당 data를 다운로드 받을 수 있게 url을 만듭시다\r\n    const audioDownloadLink = document.createElement(\"a\");\r\n    audioDownloadLink.href = URL.createObjectURL(data);\r\n\r\n\r\n\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(data);\r\n    reader.onloadend = function() {\r\n        var base64data = reader.result;\r\n        //postSttTest(base64data);\r\n        //console.log(base64data);\r\n    }\r\n\r\n    console.log(data);\r\n\r\n    // 다운로드 되는 파일의 이름. 확장자는 mp4 등 다양하게 가능하지만 오픈 소스인지 확인 합시다\r\n    audioDownloadLink.download = \"recorded.wav\";\r\n\r\n\r\n    // body에 append 해줘야겠죠\r\n    document.body.appendChild(audioDownloadLink);\r\n\r\n    // faking click. body에 append 했으니 클릭해서 다운로드를 해줘야 합니다.\r\n    audioDownloadLink.click();\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatch: (title,content) => {\r\n        dispatch(createMemo(title,content))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps)(Form)","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\actions\\memo.js",[],"C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\LoginPage.js",[],"C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\requests\\requests.js",[],"C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\Routes.js",[],"C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\RegisterPage.js",["123"],"import '../App.css';\r\nimport React from \"react\";\r\nimport {postLogin, postRegister} from \"../requests/requests\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass LoginPage extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: React.createRef(),\r\n            id: React.createRef(),\r\n            password: React.createRef(),\r\n            password2: React.createRef()\r\n\r\n        }\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n\r\n    async submit(){\r\n        const data = {\r\n            name: this.state.name.current.value,\r\n            id: this.state.id.current.value,\r\n            password: this.state.password.current.value,\r\n            password2: this.state.password.current.value\r\n        }\r\n        const echo_result = await postRegister(data);\r\n        console.log(echo_result);\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span>RegisterPage</span>\r\n                <br/>\r\n                <input ref={this.state.name}/>\r\n                <br/>\r\n                <input ref={this.state.id}/>\r\n                <br/>\r\n                <input ref={this.state.password}/>\r\n                <br/>\r\n                <input ref={this.state.password2}/>\r\n                <button onClick={this.submit}>Register</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginPage)","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\routes\\MemoPage.js",["124","125","126","127"],"import '../App.css';\r\nimport React from \"react\";\r\nimport {Header} from \"../components/Header\";\r\nimport MemoList from \"../components/MemoList\";\r\nimport {Link} from 'react-router-dom';\r\nimport Form from \"../components/Form\";\r\nimport {postFileContent} from \"../requests/requests\";\r\n\r\n\r\nexport default class MemoPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {name: this.props.location.state.name,\r\n            content: this.props.location.state.content}\r\n    }\r\n\r\n    render()\r\n    {\r\n        console.log(this.props.location.state.name);\r\n        console.log(this.props);\r\n\r\n        return (\r\n            <div>\r\n                <Form fileName = {this.state.name} fileContent={this.state.content}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\MemosNavBar.js",["128","129"],"import React from \"react\"\r\nimport {postDeleteFile} from \"../requests/requests\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class MemosNavBar extends React.Component{\r\n\r\n    render(){\r\n        const {dispatchDeleteMemo} = this.props\r\n\r\n        return (\r\n            <div class=\"memosNavBar\"><Link class=\"folderSelect\" to=\"/file\">메모 찾기</Link></div>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\MJ1\\Documents\\GitHub\\wemo\\frontend\\src\\components\\NavBar.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":4,"column":9,"nodeType":"136","messageId":"137","endLine":4,"endColumn":15},{"ruleId":"134","severity":1,"message":"138","line":5,"column":9,"nodeType":"136","messageId":"137","endLine":5,"endColumn":13},{"ruleId":"134","severity":1,"message":"139","line":1,"column":9,"nodeType":"136","messageId":"137","endLine":1,"endColumn":18},{"ruleId":"134","severity":1,"message":"140","line":1,"column":20,"nodeType":"136","messageId":"137","endLine":1,"endColumn":32},{"ruleId":"134","severity":1,"message":"135","line":3,"column":9,"nodeType":"136","messageId":"137","endLine":3,"endColumn":15},{"ruleId":"134","severity":1,"message":"141","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":3,"column":9,"nodeType":"136","messageId":"137","endLine":3,"endColumn":15},{"ruleId":"134","severity":1,"message":"142","line":5,"column":9,"nodeType":"136","messageId":"137","endLine":5,"endColumn":14},{"ruleId":"134","severity":1,"message":"143","line":5,"column":21,"nodeType":"136","messageId":"137","endLine":5,"endColumn":27},{"ruleId":"134","severity":1,"message":"144","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":12},{"ruleId":"134","severity":1,"message":"145","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":19},{"ruleId":"134","severity":1,"message":"141","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":12,"column":5,"nodeType":"148","messageId":"149","endLine":14,"endColumn":6},{"ruleId":"134","severity":1,"message":"135","line":6,"column":9,"nodeType":"136","messageId":"137","endLine":6,"endColumn":15},{"ruleId":"134","severity":1,"message":"141","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":80,"column":30,"nodeType":"152","messageId":"153","endLine":80,"endColumn":32},{"ruleId":"154","severity":1,"message":"155","line":126,"column":61,"nodeType":"156","messageId":"157","endLine":126,"endColumn":63},{"ruleId":"134","severity":1,"message":"158","line":29,"column":23,"nodeType":"136","messageId":"137","endLine":29,"endColumn":33},{"ruleId":"134","severity":1,"message":"159","line":29,"column":47,"nodeType":"136","messageId":"137","endLine":29,"endColumn":54},{"ruleId":"154","severity":1,"message":"155","line":38,"column":49,"nodeType":"156","messageId":"157","endLine":38,"endColumn":51},{"ruleId":"134","severity":1,"message":"160","line":35,"column":16,"nodeType":"136","messageId":"137","endLine":35,"endColumn":34},{"ruleId":"130","replacedBy":"161"},{"ruleId":"132","replacedBy":"162"},{"ruleId":"134","severity":1,"message":"140","line":4,"column":55,"nodeType":"136","messageId":"137","endLine":4,"endColumn":67},{"ruleId":"134","severity":1,"message":"163","line":4,"column":69,"nodeType":"136","messageId":"137","endLine":4,"endColumn":80},{"ruleId":"134","severity":1,"message":"141","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":177,"column":31,"nodeType":"152","messageId":"153","endLine":177,"endColumn":33},{"ruleId":"164","severity":1,"message":"165","line":181,"column":17,"nodeType":"166","messageId":"167","endLine":181,"endColumn":85},{"ruleId":"134","severity":1,"message":"168","line":205,"column":15,"nodeType":"136","messageId":"137","endLine":205,"endColumn":19},{"ruleId":"134","severity":1,"message":"169","line":232,"column":13,"nodeType":"136","messageId":"137","endLine":232,"endColumn":23},{"ruleId":"134","severity":1,"message":"139","line":3,"column":9,"nodeType":"136","messageId":"137","endLine":3,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":3,"column":9,"nodeType":"136","messageId":"137","endLine":3,"endColumn":15},{"ruleId":"134","severity":1,"message":"170","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":16},{"ruleId":"134","severity":1,"message":"138","line":5,"column":9,"nodeType":"136","messageId":"137","endLine":5,"endColumn":13},{"ruleId":"134","severity":1,"message":"171","line":7,"column":9,"nodeType":"136","messageId":"137","endLine":7,"endColumn":24},{"ruleId":"134","severity":1,"message":"172","line":2,"column":9,"nodeType":"136","messageId":"137","endLine":2,"endColumn":23},{"ruleId":"134","severity":1,"message":"160","line":8,"column":16,"nodeType":"136","messageId":"137","endLine":8,"endColumn":34},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'postLogin' is defined but never used.","'postMakeFile' is defined but never used.","'NavBar' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Home' is defined but never used.","'MemosNavBar' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'totalValue' is assigned a value but never used.","'history' is assigned a value but never used.","'dispatchDeleteMemo' is assigned a value but never used.",["173"],["174"],"'postSttTest' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'mime' is assigned a value but never used.","'base64data' is assigned a value but never used.","'MemoList' is defined but never used.","'postFileContent' is defined but never used.","'postDeleteFile' is defined but never used.","no-global-assign","no-unsafe-negation"]